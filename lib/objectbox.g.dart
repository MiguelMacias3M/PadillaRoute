// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/objectBox_models/viaje_registro.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 4728545412672262595),
      name: 'ViajeRegistro',
      lastPropertyId: const obx_int.IdUid(12, 5307251089363573633),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6271079064170796074),
            name: 'idRegistro',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7834138693529659243),
            name: 'idRuta',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1805846596083509090),
            name: 'idVehiculo',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5687386180560669851),
            name: 'idUsuario',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7033562502161961306),
            name: 'horaInicio',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2602739470370353414),
            name: 'hora',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 1344010995553831840),
            name: 'tiempoTotal',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 4135913824219651625),
            name: 'totalPasajeros',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5853579235906589190),
            name: 'distanciaRecorrida',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 5895363509369567912),
            name: 'velocidadPromedio',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7193315954222367176),
            name: 'litrosCombustibleConsumidoAprox',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 5307251089363573633),
            name: 'paradasRegistro',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 4728545412672262595),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ViajeRegistro: obx_int.EntityDefinition<ViajeRegistro>(
        model: _entities[0],
        toOneRelations: (ViajeRegistro object) => [],
        toManyRelations: (ViajeRegistro object) => {},
        getId: (ViajeRegistro object) => object.idRegistro,
        setId: (ViajeRegistro object, int id) {
          object.idRegistro = id;
        },
        objectToFB: (ViajeRegistro object, fb.Builder fbb) {
          final paradasRegistroOffset = fbb.writeString(object.paradasRegistro);
          fbb.startTable(13);
          fbb.addInt64(0, object.idRegistro);
          fbb.addInt64(1, object.idRuta);
          fbb.addInt64(2, object.idVehiculo);
          fbb.addInt64(3, object.idUsuario);
          fbb.addInt64(4, object.horaInicio.millisecondsSinceEpoch);
          fbb.addInt64(5, object.hora.millisecondsSinceEpoch);
          fbb.addInt64(6, object.tiempoTotal);
          fbb.addInt64(7, object.totalPasajeros);
          fbb.addInt64(8, object.distanciaRecorrida);
          fbb.addInt64(9, object.velocidadPromedio);
          fbb.addInt64(10, object.litrosCombustibleConsumidoAprox);
          fbb.addOffset(11, paradasRegistroOffset);
          fbb.finish(fbb.endTable());
          return object.idRegistro;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idRegistroParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final idRutaParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final idVehiculoParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final idUsuarioParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final paradasRegistroParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 26, '');
          final horaInicioParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0));
          final horaParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0));
          final tiempoTotalParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final totalPasajerosParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final distanciaRecorridaParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          final velocidadPromedioParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          final litrosCombustibleConsumidoAproxParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          final object = ViajeRegistro(
              idRegistro: idRegistroParam,
              idRuta: idRutaParam,
              idVehiculo: idVehiculoParam,
              idUsuario: idUsuarioParam,
              paradasRegistro: paradasRegistroParam,
              horaInicio: horaInicioParam,
              hora: horaParam,
              tiempoTotal: tiempoTotalParam,
              totalPasajeros: totalPasajerosParam,
              distanciaRecorrida: distanciaRecorridaParam,
              velocidadPromedio: velocidadPromedioParam,
              litrosCombustibleConsumidoAprox:
                  litrosCombustibleConsumidoAproxParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ViajeRegistro] entity fields to define ObjectBox queries.
class ViajeRegistro_ {
  /// See [ViajeRegistro.idRegistro].
  static final idRegistro =
      obx.QueryIntegerProperty<ViajeRegistro>(_entities[0].properties[0]);

  /// See [ViajeRegistro.idRuta].
  static final idRuta =
      obx.QueryIntegerProperty<ViajeRegistro>(_entities[0].properties[1]);

  /// See [ViajeRegistro.idVehiculo].
  static final idVehiculo =
      obx.QueryIntegerProperty<ViajeRegistro>(_entities[0].properties[2]);

  /// See [ViajeRegistro.idUsuario].
  static final idUsuario =
      obx.QueryIntegerProperty<ViajeRegistro>(_entities[0].properties[3]);

  /// See [ViajeRegistro.horaInicio].
  static final horaInicio =
      obx.QueryDateProperty<ViajeRegistro>(_entities[0].properties[4]);

  /// See [ViajeRegistro.hora].
  static final hora =
      obx.QueryDateProperty<ViajeRegistro>(_entities[0].properties[5]);

  /// See [ViajeRegistro.tiempoTotal].
  static final tiempoTotal =
      obx.QueryIntegerProperty<ViajeRegistro>(_entities[0].properties[6]);

  /// See [ViajeRegistro.totalPasajeros].
  static final totalPasajeros =
      obx.QueryIntegerProperty<ViajeRegistro>(_entities[0].properties[7]);

  /// See [ViajeRegistro.distanciaRecorrida].
  static final distanciaRecorrida =
      obx.QueryIntegerProperty<ViajeRegistro>(_entities[0].properties[8]);

  /// See [ViajeRegistro.velocidadPromedio].
  static final velocidadPromedio =
      obx.QueryIntegerProperty<ViajeRegistro>(_entities[0].properties[9]);

  /// See [ViajeRegistro.litrosCombustibleConsumidoAprox].
  static final litrosCombustibleConsumidoAprox =
      obx.QueryIntegerProperty<ViajeRegistro>(_entities[0].properties[10]);

  /// See [ViajeRegistro.paradasRegistro].
  static final paradasRegistro =
      obx.QueryStringProperty<ViajeRegistro>(_entities[0].properties[11]);
}
